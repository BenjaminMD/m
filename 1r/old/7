#!/usr/bin/python3
import matplotlib.pyplot as plt
from matplotlib.gridspec import GridSpec
import pandas as pd
import numpy as np

from ezplot import scatter_w_outline
from ezpdf import ParseResDir
def get_data(data_dir, par_path, wAl2O3) -> pd.DataFrame:
    if wAl2O3:
        res = ParseResDir(data_dir, par_path)
    else:
        res = ParseResDir(data_dir, par_path, filter="Al2O3")
    return res.df


def label_top(ax, label):
    ax_t = ax.twiny()
    ax_t.set_xticks([])
    ax_t.set_xlabel(label, fontsize=15)


def plot_mv(ax, y: pd.Series, label=None, wAl2O3=True, color='#f6a800'):
    y = y.dropna()
    x = y.index.values
    scatter_w_outline(ax, x * 29 / 3600, y, label=label, color=color)

    y_mean = y.mean()
    y_std = y.std()
    ax.set_ylim(y_mean - 3 * y_std, y_mean + 3 * y_std)
    ax.set_ylim(y_mean - 4 * y_std, y_mean + 4 * y_std)
    ax.set_xlim(0, 6)
    return ax

gs = GridSpec(7, 4,
              height_ratios=[1, 0.5, 1, 1, 1, 1, 1],
              width_ratios=[1, 1, 0.1, 1])

axes = np.array([[plt.subplot(gs[i, j]) 
         for j in [0, 1, 3]]
         for i in range(2,7)])

for i in range(3):
    axes[0, i].sharex(axes[1, i])
    axes[1, i].sharex(axes[2, i])
    axes[2, i].sharex(axes[3, i])
    axes[3, i].sharex(axes[4, i])
[label_top(a, l) for a, l in zip([axes[0, i] for i in  [0, 1, 2]] , [r'$\gamma$-Al$_2$O$_3$', *['NiO | Ni'] *2])]
        
df_w = get_data("/home/ben/m/0d/res/*res", par_path="./parameters.wAl2O3.txt", wAl2O3=True)
df_wo = get_data("/home/ben/MT/0_dat/INSITU_SBa200_U_15/res_threshold_NiO_Ni/*results", par_path="./parameters.woAl2O3.txt", wAl2O3=False)
cols = df_w.columns
scale = [c for c in cols if c.endswith('_scale')]
for top, scale, color in zip([axes[0, i] for i in  [0, 1, 1]], scale, ['#f6a800', 'green', '#f6a800']): 
    plot_mv(top, df_w[scale], wAl2O3=True, color=color) 
axes[0, 0].set_ylabel(r'scale$\,$/$\,$-')
    
Lat = [c for c in cols if c.endswith('_a')]
for top, a, color in zip([axes[1, i] for i in  [0, 1, 1]], Lat, ['#f6a800', 'green', '#f6a800']): 
    plot_mv(top, df_w[a], wAl2O3=True, color=color) 
axes[1, 0].set_ylabel(r'scale$\,$/$\,\mathrm{\AA}$')

sizes = [c for c in cols if c.endswith('_psize')]
for top, size, color in zip([axes[1, i] for i in  [0, 1, 1]], sizes, ['#f6a800', 'green', '#f6a800']): 
    plot_mv(top, df_w[size], wAl2O3=True, color=color) 
axes[2, 0].set_ylabel(r'scale$\,$/$\,$nm')

biso = [c for c in cols if c.endswith('_Biso')]
for top, biso, color in zip([axes[1, i] for i in  [0, 1, 1]], biso, ['#f6a800', 'green', '#f6a800']): 
    plot_mv(top, df_w[biso], wAl2O3=True, color=color) 
axes[3, 0].set_ylabel(r'Biso$\,$/$\,$nm$^2$')





plt.show()
